<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stark.stellasearch.dao.UserFollowingMapper">
    <insert id="insert">
        INSERT INTO `user_following`
        (`user_id`,
         `followed_user_id`,
         `following_status`,
         `creator_id`,
         `creation_time`,
         `modifier_id`,
         `modification_time`)
        VALUES (#{userId},
                #{followedUserId},
                #{followingStatus},
                #{creatorId},
                #{creationTime},
                #{modifierId},
                #{modificationTime})
    </insert>

    <delete id="deleteByUserIdAndFollowedUserId">
        DELETE
        FROM `user_following`
        WHERE `user_id` = #{userId}
          AND `followed_user_id` = #{followedUserId}
    </delete>

    <select id="getByUserIDAndFollowedUserID" resultType="stark.stellasearch.domain.UserFollowing">
        SELECT `id`,
               `user_id`,
               `followed_user_id`,
               `following_status`,
               `creator_id`,
               `creation_time`,
               `modifier_id`,
               `modification_time`
        FROM `user_following`
        WHERE `user_id` = #{userId}
          AND `followed_user_id` = #{followedUserId}
    </select>

    <resultMap id="UserFollowingInfoListMap" type="stark.stellasearch.dto.results.UserFollowingInfo">
        <id column="user_id" property="userId"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="avatar_url" property="avatarUrl"/>
        <result column="following_time" property="followingTime"/>
        <result column="following_count" property="followingCount"/>
        <result column="follower_count" property="followerCount"/>
    </resultMap>

    <select id="getFollowingList" resultMap="UserFollowingInfoListMap">
        SELECT abi.`id`                                                                    AS `user_id`,
               abi.`username`                                                              AS `username`,
               abi.`nickname`                                                              AS `nickname`,
               abi.`avatar_url`                                                            AS `avatar_url`,
               uf.`creation_time`                                                          AS 'following_time',
               (SELECT count(*) FROM `user_following` WHERE `user_id` = abi.`id`)          AS `following_count`,
               (SELECT count(*) FROM `user_following` WHERE `followed_user_id` = abi.`id`) AS `follower_count`
        FROM `user_following` uf
        INNER JOIN `account_base_info` abi
        ON abi.`id` = uf.`followed_user_id`
        AND uf.`user_id` = (SELECT `id` FROM `account_base_info` WHERE `username` = 'GLL_1')
        LIMIT #{pageCapacity} OFFSET #{offset}
    </select>

    <select id="countFollowingUsersByUsername" resultType="java.lang.Long">
        SELECT count(*)
        FROM `user_following`
        WHERE `user_id` =
              (SELECT `id` FROM `account_base_info` WHERE `username` = #{username})
    </select>

    <select id="countFollowersByUsername" resultType="java.lang.Long">
        SELECT count(*)
        FROM `user_following`
        WHERE `followed_user_id` =
              (SELECT `id` FROM `account_base_info` WHERE `username` = #{username})
    </select>

    <select id="getFollowerList" resultMap="UserFollowingInfoListMap">
        SELECT abi.`id`                                                                    AS `user_id`,
               abi.`username`                                                              AS `username`,
               abi.`nickname`                                                              AS `nickname`,
               abi.`avatar_url`                                                            AS `avatar_url`,
               uf.`creation_time`                                                          AS 'following_time',
               (SELECT count(*) FROM `user_following` WHERE `user_id` = abi.`id`)          AS `following_count`,
               (SELECT count(*) FROM `user_following` WHERE `followed_user_id` = abi.`id`) AS `follower_count`
        FROM `user_following` uf
        INNER JOIN `account_base_info` abi
        ON abi.`id` = uf.`user_id`
        AND uf.`followed_user_id` = (SELECT `id` FROM `account_base_info` WHERE `username` = #{username})
        LIMIT #{pageCapacity} OFFSET #{offset}
    </select>

    <select id="countByUsernameAndFollowedUsername" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM user_following
        WHERE user_id = (SELECT id FROM account_base_info WHERE username = #{currentUsername})
          AND followed_user_id = (SELECT id FROM account_base_info WHERE username = #{ifFollowingUsername})
    </select>
</mapper>