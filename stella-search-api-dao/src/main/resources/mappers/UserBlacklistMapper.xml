<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stark.stellasearch.dao.UserBlacklistMapper">
    <resultMap type="stark.stellasearch.domain.UserBlacklist" id="UserBlacklistResultMap">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="blockedUserId" column="blocked_user_id"/>
        <result property="creatorId" column="creator_id"/>
        <result property="creationTime" column="creation_time"/>
        <result property="modifierId" column="modifier_id"/>
        <result property="modificationTime" column="modification_time"/>
    </resultMap>

    <resultMap type="stark.stellasearch.dto.results.UserBlacklistInfo" id="UserBlacklistInfoResultMap">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="blockedUserId" column="blocked_user_id"/>
        <result property="blockedUsername" column="blocked_User_Name"/>
        <result property="blockedTime" column="blocked_time"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `user_blacklist`
        (`user_id`, `blocked_user_id`, `creator_id`, `creation_time`, `modifier_id`, `modification_time`)
        VALUES
        (#{userId}, #{blockedUserId}, #{creatorId}, #{creationTime}, #{modifierId}, #{modificationTime})
    </insert>

    <delete id="deleteByUserIds">
        DELETE FROM `user_blacklist`
        WHERE `user_id` = #{userId}
        AND `blocked_user_id` = #{blockedUserId}
    </delete>

    <select id="countByUserIds" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `user_blacklist`
        WHERE `user_id` = #{userId}
        AND `blocked_user_id` = #{blockedUserId}
    </select>

    <select id="getByUserIds" resultMap="UserBlacklistInfoResultMap">
        SELECT ubl.`id`,
               ubl.`user_id`,
               ubl.`blocked_user_id`,
               (SELECT `username`
                FROM account_base_info AS abi
                WHERE abi.id = ubl.`blocked_user_id`) AS `blocked_user_name`,
               ubl.`creation_time`                    AS `blocked_time`
        FROM `user_blacklist` AS `ubl`
        WHERE ubl.`user_id` = #{currentUserId} LIMIT #{pageCapacity}
        OFFSET #{offset}
    </select>

    <select id="countBlockedUsersByUserId" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM `user_blacklist`
        WHERE `user_id` = #{userId}
    </select>

</mapper>