<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stark.stellasearch.dao.UserVideoFavoritesMapper">
    <resultMap id="BaseResultMap" type="stark.stellasearch.domain.UserVideoFavorites">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="videoId" column="video_id"/>
        <result property="playlistId" column="playlist_id"/>
        <result property="creatorId" column="creator_id"/>
        <result property="creationTime" column="creation_time"/>
        <result property="modifierId" column="modifier_id"/>
        <result property="modificationTime" column="modification_time"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `user_video_favorites`
        (`user_id`, `video_id`, `playlist_id`, `creator_id`, `creation_time`, `modifier_id`, `modification_time`)
        VALUES
        (#{userId}, #{videoId}, #{playlistId}, #{creatorId}, #{creationTime}, #{modifierId}, #{modificationTime})
    </insert>

    <delete id="delete">
        DELETE FROM `user_video_favorites`
        WHERE `video_id` = #{videoId}
        AND `playlist_id` = #{playlistId}
        AND `user_id` = #{userId}
    </delete>

    <select id="getVideoByVideoIdAndPlaylistId" resultMap="BaseResultMap" >
        SELECT `id`,
               `user_id`,
               `video_id`,
               `playlist_id`,
               `creator_id`,
               `creation_time`,
               `modifier_id`,
               `modification_time`
        FROM `user_video_favorites`
        WHERE `video_id` = #{videoId}
          AND `playlist_id` = #{playlistId}
          AND `user_id` = #{userId}
    </select>

    <select id="countVideoInPlaylist" resultType="long">
        SELECT COUNT(*)
        FROM `user_video_favorites`
        WHERE `video_id` = #{videoId}
          AND `playlist_id` = #{playlistId}
          AND `user_id` = #{userId}
    </select>

    <select id="getFavoritesByPlaylistId" resultMap="BaseResultMap">
        SELECT `id`,
               `user_id`,
               `video_id`,
               `playlist_id`,
               `creator_id`,
               `creation_time`,
               `modifier_id`,
               `modification_time`
        FROM `user_video_favorites`
        WHERE `playlist_id` = #{playlistId}
          AND `user_id` = #{userId}
        LIMIT #{pageCapacity} OFFSET #{offset}
    </select>

    <select id="countVideoByPlaylistId" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM `user_video_favorites`
        WHERE `playlist_id` = #{playlistId}
          AND `user_id` = #{userId}
    </select>

    <delete id="deleteFavoritesByUserAndVideoId">
        DELETE
        FROM `user_video_favorites`
        WHERE `user_id` = #{userId}
          AND `video_id` = #{videoId}
    </delete>

    <delete id="deleteFavoritesNotInRange">
        DELETE
        FROM `user_video_favorites`
        WHERE `user_id` = #{userId}
          AND `video_id` = #{videoId}
        AND `playlist_id` NOT IN
        <foreach collection="playlistIds" open="(" close=")" separator="," item="playlistId">
            #{playlistId}
        </foreach>
    </delete>

    <insert id="addFavoritesInRange">
        INSERT INTO `user_video_favorites`
        (`user_id`, `video_id`, `playlist_id`, `creator_id`, `modifier_id`)
        SELECT
        #{userId}, #{videoId}, `id`, #{userId}, #{userId}
        FROM `user_video_playlist`
        WHERE `user_id` = #{userId}
        AND `id` IN
        <foreach collection="playlistIds" open="(" close=")" separator="," item="playlistId">
            #{playlistId}
        </foreach>
        AND NOT EXISTS
        (
            SELECT 1 FROM `user_video_favorites`
            WHERE `user_id` = #{userId}
              AND `video_id` = #{videoId}
              AND `playlist_id` = `user_video_playlist`.`id`
        )
    </insert>
</mapper>