<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stark.stellasearch.dao.UserVideoInfoMapper">
    <resultMap id="UserVideoInfoResultMap" type="stark.stellasearch.domain.UserVideoInfo">
        <id property="id" column="id"/>
        <result property="nameInOss" column="name_in_oss"/>
        <result property="title" column="title"/>
        <result property="coverUrl" column="cover_url"/>
        <result property="creationTypeId" column="creation_type_id"/>
        <result property="sectionId" column="section_id"/>
        <result property="labelIds" column="label_ids"/>
        <result property="introduction" column="introduction"/>
        <result property="creatorId" column="creator_id"/>
        <result property="creationTime" column="creation_time"/>
        <result property="modifierId" column="modifier_id"/>
        <result property="modificationTime" column="modification_time"/>
    </resultMap>

    <resultMap id="VideoPlayInfoMap" type="stark.stellasearch.dto.results.VideoPlayInfo">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="nameInOss" column="name_in_oss"/>
        <result property="coverUrl" column="cover_url"/>
        <result property="introduction" column="introduction"/>
        <result property="creatorId" column="creator_id"/>
        <result property="creatorName" column="creator_name"/>
        <result property="creationTime" column="creation_time"/>
        <result property="modificationTime" column="modification_time"/>
        <result property="playCount" column="play_count"/>
        <result property="favoritesCount" column="favorites_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="userLikes" column="user_likes"/>
        <result property="userFavorites" column="user_favorites"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `user_video_info`
        (
            `name_in_oss`,
            `title`,
            `cover_url`,
            `creation_type_id`,
            `section_id`,
            `label_ids`,
            `introduction`,
            `creator_id`,
            `creation_time`,
            `modifier_id`,
            `modification_time`
        )
        VALUES
        (
            #{nameInOss},
            #{title},
            #{coverUrl},
            #{creationTypeId},
            #{sectionId},
            #{labelIds},
            #{introduction},
            #{creatorId},
            #{creationTime},
            #{modifierId},
            #{modificationTime}
        )
    </insert>

    <update id="updateVideoInfoById">
        UPDATE `user_video_info`
        SET `title` = #{title},
            `cover_url` = #{coverUrl},
            `creation_type_id` = #{creationTypeId},
            `section_id` = #{sectionId},
            `label_ids` = #{labelIds},
            `introduction` = #{introduction}
        WHERE `id` = #{id}
    </update>

    <select id="getVideoPlayInfosByUserId" resultMap="VideoPlayInfoMap">
        SELECT uvi.`id`                         AS `id`,
               uvi.`title`                      AS `title`,
               uvi.`name_in_oss`                AS `name_in_oss`,
               uvi.`cover_url`                  AS `cover_url`,
               uvi.`introduction`               AS `introduction`,
               uvi.`creation_time`              AS `creation_time`,
               uvi.`modification_time`          AS `modification_time`,
               COALESCE(vpr.play_count, 0)      AS `play_count`,
               COALESCE(uvf.favorites_count, 0) AS `favorites_count`,
               COALESCE(uvl.like_count, 0)      AS `like_count`,
               COALESCE(uvc.comment_count, 0)   AS `comment_count`
        FROM `user_video_info` uvi
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS play_count
            FROM `video_play_record`
            WHERE `video_id` IN (SELECT `id` FROM `user_video_info` WHERE `creator_id` = #{userId})
            GROUP BY `video_id`
        ) vpr
        ON uvi.`id` = vpr.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS favorites_count
            FROM `user_video_favorites`
            WHERE `video_id` IN (SELECT `id` FROM `user_video_info` WHERE `creator_id` = #{userId})
            GROUP BY `video_id`
        ) AS uvf
        ON uvi.`id` = uvf.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS like_count
            FROM `user_video_like`
            WHERE `like_type` = 1
              AND `video_id` IN (SELECT `id` FROM `user_video_info` WHERE `creator_id` = #{userId})
            GROUP BY `video_id`
        ) AS uvl
        ON uvi.`id` = uvl.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS comment_count
            FROM `user_video_comment`
            WHERE `video_id` IN (SELECT `id` FROM `user_video_info` WHERE `creator_id` = #{userId})
            GROUP BY `video_id`
        ) AS uvc
        ON uvi.`id` = uvc.`video_id`
        WHERE uvi.`creator_id` = #{userId}
          AND uvi.`title` IS NOT NULL
        ORDER BY `creation_time` DESC
        LIMIT #{pageCapacity} OFFSET #{offset}
    </select>
    
    <select id="countVideoByUserId" resultType="long">
        SELECT COUNT(*)
        FROM `user_video_info`
        WHERE `creator_id` = #{userId}
          AND `title` IS NOT NULL
    </select>

    <select id="getVideoBaseInfoById" resultMap="UserVideoInfoResultMap">
        SELECT
            `id`,
            `name_in_oss`,
            `title`,
            `cover_url`,
            `creation_type_id`,
            `section_id`,
            `label_ids`,
            `introduction`,
            `creator_id`,
            `creation_time`,
            `modifier_id`,
            `modification_time`
        FROM `user_video_info`
        WHERE `id` = #{id}
    </select>

    <!-- TODO: Optimize the join here, try to reduce the count of joins. -->
    <select id="getVideoPlayInfoById" resultMap="VideoPlayInfoMap">
        SELECT uvi.`id`                                       AS `id`,
               uvi.`title`                                    AS `title`,
               uvi.`name_in_oss`                              AS `name_in_oss`,
               uvi.`cover_url`                                AS `cover_url`,
               uvi.`introduction`                             AS `introduction`,
               uvi.`creator_id`                               AS `creator_id`,
               abi.`username`                                 AS `creator_name`,
               uvi.`creation_time`                            AS `creation_time`,
               uvi.`modification_time`                        AS `modification_time`,
               COALESCE(vpr.play_count, 0)                    AS `play_count`,
               COALESCE(uvf.favorites_count, 0)               AS `favorites_count`,
               COALESCE(uvl.like_count, 0)                    AS `like_count`,
               COALESCE(uvc.comment_count, 0)                 AS `comment_count`,
               COALESCE(user_like.like_count, 0) > 0          AS `user_likes`,
               COALESCE(user_favorites.favorite_count, 0) > 0 AS `user_favorites`
        FROM `user_video_info` uvi
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS play_count
            FROM `video_play_record`
            WHERE `video_id` = #{videoId}
            GROUP BY `video_id`
        ) vpr
        ON uvi.`id` = vpr.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(DISTINCT `user_id`) AS favorites_count
            FROM `user_video_favorites`
            WHERE `video_id` = #{videoId}
            GROUP BY `video_id`
        ) AS uvf
        ON uvi.`id` = uvf.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS like_count
            FROM `user_video_like`
            WHERE `video_id` = #{videoId}
              AND `like_type` = 1
            GROUP BY `video_id`
        ) AS uvl
        ON uvi.`id` = uvl.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS comment_count
            FROM `user_video_comment`
            WHERE `video_id` = #{videoId}
            GROUP BY `video_id`
        ) AS uvc
        ON uvi.`id` = uvc.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS like_count
            FROM `user_video_like`
            WHERE `user_id` = #{userId}
              AND `video_id` = #{videoId}
            GROUP BY `video_id`
        ) AS user_like
        ON uvi.`id` = user_like.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(DISTINCT `user_id`) AS favorite_count
            FROM `user_video_favorites`
            WHERE `user_id` = #{userId}
              AND `video_id` = #{videoId}
            GROUP BY `video_id`
        ) AS user_favorites
        ON uvi.`id` = user_favorites.`video_id`
        INNER JOIN `account_base_info` abi ON uvi.`creator_id` = abi.`id`
        WHERE uvi.`id` = #{videoId}
          AND uvi.`title` IS NOT NULL
    </select>

    <select id="countVideoById" resultType="long">
        SELECT COUNT(*)
        FROM `user_video_info`
        WHERE `id` = #{id}
    </select>

    <!-- TODO: Implement it by ES. -->
    <select id="getVideoPlayInfosByKeyword" resultMap="VideoPlayInfoMap">
        SELECT uvi.`id`                         AS `id`,
               uvi.`title`                      AS `title`,
               uvi.`name_in_oss`                AS `name_in_oss`,
               uvi.`cover_url`                  AS `cover_url`,
               uvi.`introduction`               AS `introduction`,
               uvi.`creator_id`                 AS `creator_id`,
               abi.`username`                   AS `creator_name`,
               uvi.`creation_time`              AS `creation_time`,
               uvi.`modification_time`          AS `modification_time`,
               COALESCE(vpr.play_count, 0)      AS `play_count`,
               COALESCE(uvf.favorites_count, 0) AS `favorites_count`,
               COALESCE(uvl.like_count, 0)      AS `like_count`,
               COALESCE(uvc.comment_count, 0)   AS `comment_count`,
               COALESCE(user_like.like_count, 0)          AS `user_likes`,
               COALESCE(user_favorites.favorite_count, 0) AS `user_favorites`
        FROM `user_video_info` uvi
                 LEFT JOIN (
            SELECT `video_id`, COUNT(*) AS play_count
            FROM `video_play_record`
            GROUP BY `video_id`
        ) vpr ON uvi.`id` = vpr.`video_id`
                 LEFT JOIN (
            SELECT `video_id`, COUNT(*) AS favorites_count
            FROM `user_video_favorites`
            GROUP BY `video_id`
        ) uvf ON uvi.`id` = uvf.`video_id`
                 LEFT JOIN (
            SELECT `video_id`, COUNT(*) AS like_count
            FROM `user_video_like`
            WHERE `like_type` = 1
            GROUP BY `video_id`
        ) uvl ON uvi.`id` = uvl.`video_id`
                 LEFT JOIN (
            SELECT `video_id`, COUNT(*) AS comment_count
            FROM `user_video_comment`
            GROUP BY `video_id`
        ) uvc ON uvi.`id` = uvc.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS like_count
            FROM `user_video_like`
            WHERE `user_id` = #{userId}
            AND `video_id` = #{videoId}
            GROUP BY `video_id`
        ) AS user_like
        ON uvi.`id` = user_like.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS favorite_count
            FROM user_video_favorites
            WHERE `user_id` = #{userId}
            AND `video_id` = #{videoId}
            GROUP BY `video_id`
        ) AS user_favorites
        ON uvi.`id` = user_favorites.`video_id`
        INNER JOIN `account_base_info` abi ON uvi.`creator_id` = abi.`id`
        WHERE uvi.`title` LIKE CONCAT('%', #{keyword}, '%')
          AND uvi.`title` IS NOT NULL
        LIMIT #{pageCapacity} OFFSET #{offset};
    </select>

    <select id="countVideoByKeyword" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM `user_video_info`
        WHERE `title` LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <select id="getVideoPlayInfosByPlaylistId" resultMap="VideoPlayInfoMap">
        SELECT uvi.`id`                                       AS `id`,
               uvi.`title`                                    AS `title`,
               uvi.`name_in_oss`                              AS `name_in_oss`,
               uvi.`cover_url`                                AS `cover_url`,
               uvi.`introduction`                             AS `introduction`,
               uvi.`creator_id`                               AS `creator_id`,
               abi.`username`                                 AS `creator_name`,
               uvi.`creation_time`                            AS `creation_time`,
               uvi.`modification_time`                        AS `modification_time`,
               COALESCE(vpr.play_count, 0)                    AS `play_count`,
               COALESCE(uvf.favorites_count, 0)               AS `favorites_count`,
               COALESCE(uvl.like_count, 0)                    AS `like_count`,
               COALESCE(uvc.comment_count, 0)                 AS `comment_count`,
               COALESCE(user_like.like_count, 0) > 0          AS `user_likes`,
               COALESCE(user_favorites.favorite_count, 0) > 0 AS `user_favorites`
        FROM
        (
            SELECT *
            FROM `user_video_info`
            WHERE `id` IN
            (
                SELECT DISTINCT `video_id`
                FROM `user_video_favorites`
                WHERE `playlist_id` = #{playlistId}
            )
        ) uvi
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS play_count
            FROM `video_play_record`
            WHERE `video_id` IN
            (
                SELECT DISTINCT video_id
                FROM `user_video_favorites`
                WHERE playlist_id = #{playlistId}
            )
            GROUP BY `video_id`
        ) vpr
        ON uvi.`id` = vpr.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(DISTINCT `user_id`) AS favorites_count
            FROM `user_video_favorites`
            WHERE `video_id` IN
            (
                SELECT DISTINCT video_id
                FROM `user_video_favorites`
                WHERE playlist_id = #{playlistId}
            )
            GROUP BY `video_id`
        ) AS uvf
        ON uvi.`id` = uvf.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS like_count
            FROM `user_video_like`
            WHERE `like_type` = 1
              AND `video_id` IN
            (
                SELECT DISTINCT video_id
                FROM `user_video_favorites`
                WHERE playlist_id = #{playlistId}
            )
            GROUP BY `video_id`
        ) AS uvl
        ON uvi.`id` = uvl.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS comment_count
            FROM `user_video_comment`
            WHERE `video_id` IN
            (
                SELECT DISTINCT video_id
                FROM `user_video_favorites`
                WHERE playlist_id = #{playlistId}
            )
            GROUP BY `video_id`
        ) AS uvc
        ON uvi.`id` = uvc.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(*) AS like_count
            FROM `user_video_like`
            WHERE `user_id` = #{userId}
              AND `video_id` IN
            (
                SELECT DISTINCT video_id
                FROM `user_video_favorites`
                WHERE playlist_id = #{playlistId}
            )
            GROUP BY `video_id`
        ) AS user_like
        ON uvi.`id` = user_like.`video_id`
        LEFT JOIN
        (
            SELECT
                `video_id`,
                COUNT(DISTINCT `user_id`) AS favorite_count
            FROM `user_video_favorites`
            WHERE `video_id` IN
            (
                SELECT DISTINCT video_id
                FROM `user_video_favorites`
                WHERE playlist_id = #{playlistId}
            )
            GROUP BY `video_id`
        ) AS user_favorites
        ON uvi.`id` = user_favorites.`video_id`
        INNER JOIN `account_base_info` abi ON uvi.`creator_id` = abi.`id`
        WHERE uvi.`title` IS NOT NULL
        LIMIT #{pageCapacity} OFFSET #{offset}
    </select>
</mapper>